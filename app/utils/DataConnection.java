package main.java.app.utils;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * @author meredith hoffman
 *
 */
public final class DataConnection {
	private DataConnection() {}
	private static String driver = "org.apache.derby.jdbc.EmbeddedDriver";
	private static String dbName="DB";
	private static Connection conn = null;
	private static Statement stmt = null;
	public static void initialize(){
		//Load DB driver
		try {
			Class.forName(driver);
			System.out.println("Successfully loaded DB driver");
		} catch (ClassNotFoundException e) {
			System.out.println("Failed to load DB driver");
			e.printStackTrace();
			System.exit(0);
		}
		String connectionURL = "jdbc:derby:" + dbName + ";create=true";
		System.out.println("Attempting to connect to database " + dbName + "...");
		//Connect to DB, create one if given DB doesn't exist
		try {
			conn = DriverManager.getConnection(connectionURL);		 
			System.out.println("Connected to database " + dbName);
		} catch (Throwable e) {
			System.out.println("Failed to connect to database" + dbName);
			e.printStackTrace();
			System.exit(0);
		}
		if(!tablesExist()) {
			System.out.println("No db found, creating new tables");
			try{
				stmt = conn.createStatement();
				stmt.execute("CREATE TABLE Category("
					+ "id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "
					+ "name VARCHAR(100), "
					+ "description VARCHAR(200), "
					+ "status VARCHAR(10))");
				stmt.execute("CREATE TABLE Vendor("
					+ "id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "
					+ "name VARCHAR(50), "
					+ "status VARCHAR(10), "
					+ "description VARCHAR(200), "
					+ "address_line1 VARCHAR(100), "
					+ "address_line2 VARCHAR(100), "
					+ "address_city VARCHAR(100), "
					+ "address_state VARCHAR(2), "
					+ "address_zip VARCHAR(5), "
					+ "phone VARCHAR(10), "
					+ "email VARCHAR(100), "
					+ "contact_name VARCHAR(100))");
				stmt.execute("CREATE TABLE Product("
					+ "id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "
					+ "name VARCHAR(100), "
					+ "description VARCHAR(200), "
					+ "status VARCHAR(10), "
					+ "sku VARCHAR(100), "
					+ "quantity INT, "
					+ "low_quantity INT, "
					+ "is_low SMALLINT, "
					+ "category_id INT REFERENCES Category(id), "
					+ "vendor_id INT REFERENCES Vendor(id))");
				stmt.execute("CREATE TABLE Inventory("
					+ "id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "
					+ "product_id INT REFERENCES Product(id), "
					+ "date DATE, "
					+ "adjustment INT)");
			} catch (SQLException e) {
				System.out.println(e); 
			}
		}
	}
	private static boolean tablesExist() {
		try {
			stmt = conn.createStatement();
			stmt.execute("SELECT * FROM Product");
			return true;
		}
		catch (SQLException e) {
			return false;
		}
	}

}
